rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user owns the resource
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Users collection - public profile data
    match /users/{userId} {
      // Anyone can read public user profiles
      allow read: if true;
      
      // Only the user can create/update their own profile
      allow create, update: if isOwner(userId);
      
      // Users cannot delete their profile
      allow delete: if false;
      
      // Private subcollection - GitHub tokens and sensitive data
      match /private/{document=**} {
        // Only the user can read/write their own private data
        allow read, write: if isOwner(userId);
      }
    }
    
    // Projects collection
    match /projects/{projectId} {
      // Users can read their own projects
      allow read: if isAuthenticated() && resource.data.userId == request.auth.uid;
      
      // Users can create projects (must set userId to their own uid)
      allow create: if isAuthenticated() 
                    && request.resource.data.userId == request.auth.uid
                    && request.resource.data.keys().hasAll(['userId', 'repoName', 'githubRepoId', 'cloneUrl', 'status', 'createdAt']);
      
      // Users can update their own projects
      allow update: if isOwner(resource.data.userId);
      
      // Users can delete their own projects
      allow delete: if isOwner(resource.data.userId);
    }
    
    // Deployments collection (if you add it later)
    match /deployments/{deploymentId} {
      // Users can read deployments for their projects
      allow read: if isAuthenticated() && resource.data.userId == request.auth.uid;
      
      // Users can create deployments for their projects
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      
      // Users can update their own deployments
      allow update: if isOwner(resource.data.userId);
      
      // Users can delete their own deployments
      allow delete: if isOwner(resource.data.userId);
    }
    
    // Deny all other access by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
